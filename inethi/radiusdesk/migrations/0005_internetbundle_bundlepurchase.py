# Generated by Django 5.2.7 on 2025-10-17 14:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_user_imsi_user_product_id_cents_user_product_id_data_and_more'),
        ('radiusdesk', '0004_radiusdesk_user'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InternetBundle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Bundle name (e.g., '5GB Data Bundle')", max_length=255)),
                ('price', models.FloatField(help_text='Bundle cost')),
                ('payment_method', models.CharField(choices=[('crypto', 'Cryptocurrency'), ('one4you', 'One4You'), ('other', 'Other')], help_text='Payment method accepted for this bundle', max_length=20)),
                ('data_gb', models.FloatField(default=0, help_text='Data amount in gigabytes (0 if time-based bundle)')),
                ('time_minutes', models.IntegerField(default=0, help_text='Time amount in minutes (0 if data-based bundle)')),
                ('is_data_bundle', models.BooleanField(default=True, help_text='True for data bundles, False for time bundles')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this bundle is currently available for purchase')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('radius_desk_instance', models.ForeignKey(help_text='The RadiusDesk instance this bundle is for', on_delete=django.db.models.deletion.CASCADE, related_name='internet_bundles', to='radiusdesk.radiusdeskinstance')),
            ],
            options={
                'verbose_name': 'Internet Bundle',
                'verbose_name_plural': 'Internet Bundles',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BundlePurchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(help_text='Payment method used', max_length=20)),
                ('amount_paid', models.FloatField(help_text='Amount paid for the bundle')),
                ('purchase_date', models.DateTimeField(auto_now_add=True, help_text='Date and time of purchase')),
                ('status', models.CharField(choices=[('success', 'Success'), ('failed', 'Failed'), ('pending', 'Pending')], default='pending', help_text='Status of the purchase', max_length=20)),
                ('radiusdesk_user', models.ForeignKey(help_text='The RadiusDesk permanent user account', on_delete=django.db.models.deletion.CASCADE, related_name='bundle_purchases', to='radiusdesk.radiusdeskuser')),
                ('transaction', models.ForeignKey(blank=True, help_text='The blockchain transaction (for crypto payments)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bundle_purchases', to='core.transaction')),
                ('user', models.ForeignKey(help_text='The user who purchased the bundle', on_delete=django.db.models.deletion.CASCADE, related_name='bundle_purchases', to=settings.AUTH_USER_MODEL)),
                ('bundle', models.ForeignKey(help_text='The bundle that was purchased', on_delete=django.db.models.deletion.CASCADE, related_name='purchases', to='radiusdesk.internetbundle')),
            ],
            options={
                'verbose_name': 'Bundle Purchase',
                'verbose_name_plural': 'Bundle Purchases',
                'ordering': ['-purchase_date'],
            },
        ),
    ]
